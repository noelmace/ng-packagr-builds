{"version":3,"file":"write-bundles.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-v5/entry-point/write-bundles.transform.ts"],"names":[],"mappings":"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","sourcesContent":["import { map, switchMap } from 'rxjs/operators';\r\nimport { fromPromise } from 'rxjs/observable/fromPromise';\r\nimport { pipe } from 'rxjs/util/pipe';\r\nimport { Transform } from '../../brocc/transform';\r\nimport { FlattenOpts, flattenToFesm, flattenToUmd, flattenToUmdMin } from '../../flatten/flatten';\r\nimport { NgEntryPoint } from '../../ng-package-format/entry-point';\r\nimport { isEntryPoint, isEntryPointInProgress, EntryPointNode } from '../nodes';\r\nimport * as log from '../../util/log';\r\nimport { DestinationFiles } from '../../ng-package-format/shared';\r\nimport { BuildGraph } from '../../brocc/build-graph';\r\nimport { DependencyList } from '../../flatten/external-module-id-strategy';\r\nimport { unique } from '../../util/array';\r\n\r\nexport const writeBundlesTransform: Transform = pipe(\r\n  switchMap(graph => {\r\n    const entryPoint = graph.find(isEntryPointInProgress()) as EntryPointNode;\r\n    const ngEntryPoint: NgEntryPoint = entryPoint.data.entryPoint;\r\n\r\n    // Add UMD module IDs for dependencies\r\n    const dependencyUmdIds = entryPoint\r\n      .filter(isEntryPoint)\r\n      .map(ep => ep.data.entryPoint)\r\n      .reduce((prev, ep: NgEntryPoint) => {\r\n        prev[ep.moduleId] = ep.umdId;\r\n\r\n        return prev;\r\n      }, {});\r\n\r\n    const { bundledDependencies, dependencies = {}, peerDependencies = {} } = entryPoint.data.entryPoint.packageJson;\r\n\r\n    const opts: FlattenOpts = {\r\n      destFile: '',\r\n      entryFile: '',\r\n      flatModuleFile: ngEntryPoint.flatModuleFile,\r\n      esmModuleId: ngEntryPoint.moduleId,\r\n      umdModuleId: ngEntryPoint.umdId,\r\n      amdId: ngEntryPoint.amdId,\r\n      umdModuleIds: {\r\n        ...ngEntryPoint.umdModuleIds,\r\n        ...dependencyUmdIds\r\n      },\r\n      dependencyList: getDepenencyListForGraph(graph)\r\n    };\r\n\r\n    const { destinationFiles } = entryPoint.data;\r\n    return fromPromise(writeFlatBundleFiles(destinationFiles, opts)).pipe(map(() => graph));\r\n  })\r\n);\r\n\r\nasync function writeFlatBundleFiles(destinationFiles: DestinationFiles, opts: FlattenOpts): Promise<void> {\r\n  const { esm2015, fesm2015, esm5, fesm5, umd, umdMinified } = destinationFiles;\r\n\r\n  log.info('Bundling to FESM2015');\r\n  await flattenToFesm({\r\n    ...opts,\r\n    entryFile: esm2015,\r\n    destFile: fesm2015\r\n  });\r\n\r\n  log.info('Bundling to FESM5');\r\n  await flattenToFesm({\r\n    ...opts,\r\n    entryFile: esm5,\r\n    destFile: fesm5\r\n  });\r\n\r\n  log.info('Bundling to UMD');\r\n  await flattenToUmd({\r\n    ...opts,\r\n    entryFile: fesm5,\r\n    destFile: umd,\r\n    dependencyList: opts.dependencyList\r\n  });\r\n\r\n  log.info('Minifying UMD bundle');\r\n  await flattenToUmdMin(umd, umdMinified);\r\n}\r\n\r\n/** Get all list of depencies for the entire 'BuildGraph' */\r\nfunction getDepenencyListForGraph(graph: BuildGraph): DependencyList {\r\n  // We need to do this because if A dependecy on bundled B\r\n  // And A has a secondary entry point A/1 we want only to bundle B if it's used.\r\n  // Also if A/1 depends on A we don't want to bundle A thus we mark this a dependency.\r\n\r\n  const dependencyList: DependencyList = {\r\n    dependencies: [],\r\n    bundledDependencies: []\r\n  };\r\n\r\n  for (const entry of graph.filter(isEntryPoint)) {\r\n    const { bundledDependencies = [], dependencies = {}, peerDependencies = {} } = entry.data.entryPoint.packageJson;\r\n\r\n    dependencyList.bundledDependencies = unique(dependencyList.bundledDependencies.concat(bundledDependencies));\r\n    dependencyList.dependencies = unique(\r\n      dependencyList.dependencies.concat(\r\n        Object.keys(dependencies),\r\n        Object.keys(peerDependencies),\r\n        entry.data.entryPoint.moduleId\r\n      )\r\n    );\r\n  }\r\n\r\n  return dependencyList;\r\n}\r\n"]}