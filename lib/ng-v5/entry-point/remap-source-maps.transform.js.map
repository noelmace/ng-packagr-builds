{"version":3,"file":"remap-source-maps.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-v5/entry-point/remap-source-maps.transform.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qDAAwE;AACxE,kDAAwD;AACxD,sCAAsC;AACtC,oCAAkE;AAClE,oDAA4D;AAE/C,QAAA,wBAAwB,GAAc,gCAAoB,CAAC,CAAM,KAAK,EAAC,EAAE;IACpF,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,8BAAsB,EAAE,CAAmB,CAAC;IAC1E,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC9B,MAAM,QAAQ,GAAG,0BAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrE,MAAM,sBAAc,CAAC,QAAQ,CAAC,CAAC;IAC/B,MAAM,CAAC,KAAK,CAAC;AACf,CAAC,CAAA,CAAC,CAAC","sourcesContent":["import { Transform, transformFromPromise } from '../../brocc/transform';\r\nimport { remapSourceMap } from '../../sourcemaps/remap';\r\nimport * as log from '../../util/log';\r\nimport { isEntryPointInProgress, EntryPointNode } from '../nodes';\r\nimport { getGlobForMapWork } from '../../sourcemaps/shared';\r\n\r\nexport const remapSourceMapsTransform: Transform = transformFromPromise(async graph => {\r\n  const entryPoint = graph.find(isEntryPointInProgress()) as EntryPointNode;\r\n  log.info('Remap source maps');\r\n  const patterns = getGlobForMapWork(entryPoint.data.destinationFiles);\r\n  await remapSourceMap(patterns);\r\n  return graph;\r\n});\r\n"]}