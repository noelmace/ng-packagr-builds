{"version":3,"file":"stylesheet.transform.js","sourceRoot":"","sources":["../../../../../src/lib/ng-v5/entry-point/resources/stylesheet.transform.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs-extra';\r\nimport * as path from 'path';\r\nimport stripBom = require('strip-bom');\r\nimport { Transform, transformFromPromise } from '../../../brocc/transform';\r\nimport { NgEntryPoint } from '../../../ng-package-format/entry-point';\r\nimport * as log from '../../../util/log';\r\nimport { isEntryPointInProgress, fileUrlPath, isPackage, TYPE_STYLESHEET } from '../../nodes';\r\n\r\n// CSS Tools\r\nimport * as autoprefixer from 'autoprefixer';\r\nimport * as browserslist from 'browserslist';\r\nimport * as sass from 'node-sass';\r\nimport * as nodeSassTildeImporter from 'node-sass-tilde-importer';\r\nimport * as postcss from 'postcss';\r\nimport * as postcssUrl from 'postcss-url';\r\nimport * as postcssClean from 'postcss-clean';\r\nimport * as less from 'less';\r\nimport * as stylus from 'stylus';\r\nimport { CssUrl } from '../../../ng-package-format/shared';\r\n\r\nexport const stylesheetTransform: Transform = transformFromPromise(async graph => {\r\n  log.info(`Rendering Stylesheets`);\r\n\r\n  // Fetch current entry point from graph\r\n  const entryPoint = graph.find(isEntryPointInProgress());\r\n\r\n  // Fetch stylesheet nodes from the graph\r\n  const stylesheetNodes = graph.from(entryPoint).filter(node => node.type === TYPE_STYLESHEET && node.state !== 'done');\r\n\r\n  // Determine base path from NgPackage\r\n  const ngPkg = graph.find(isPackage);\r\n\r\n  const postCssProcessor = createPostCssProcessor(ngPkg.data.basePath, entryPoint.data.entryPoint.cssUrl);\r\n\r\n  for (let stylesheetNode of stylesheetNodes) {\r\n    const filePath: string = fileUrlPath(stylesheetNode.url);\r\n\r\n    // Render pre-processor language (sass, styl, less)\r\n    const renderedCss: string = await renderPreProcessor(filePath, ngPkg.data.basePath, entryPoint.data.entryPoint);\r\n\r\n    // Render postcss (autoprefixing and friends)\r\n    const result = await postCssProcessor.process(renderedCss, {\r\n      from: filePath,\r\n      to: filePath.replace(path.extname(filePath), '.css')\r\n    });\r\n\r\n    // Escape existing backslashes for the final output into a string literal, which would otherwise escape the character after it\r\n    const resultCss = result.css.replace(/\\\\/g, '\\\\\\\\');\r\n\r\n    // Log warnings from postcss\r\n    result.warnings().forEach(msg => {\r\n      log.warn(msg.toString());\r\n    });\r\n\r\n    // Update node in the graph\r\n    stylesheetNode.data = {\r\n      ...stylesheetNode.data,\r\n      content: resultCss\r\n    };\r\n  }\r\n\r\n  return graph;\r\n});\r\n\r\nfunction createPostCssProcessor(basePath: string, cssUrl: CssUrl): postcss.Processor {\r\n  log.debug(`determine browserslist for ${basePath}`);\r\n  const browsers = browserslist(undefined, { filePath: basePath });\r\n\r\n  const postCssPlugins = [];\r\n\r\n  if (cssUrl !== CssUrl.none) {\r\n    log.debug(`postcssUrl: ${cssUrl}`);\r\n    postCssPlugins.push(postcssUrl({ url: cssUrl }));\r\n  }\r\n\r\n  // this is important to be executed post running `postcssUrl`\r\n  postCssPlugins.push(\r\n    autoprefixer({ browsers }),\r\n    postcssClean({\r\n      level: {\r\n        2: {\r\n          specialComments: false\r\n        }\r\n      }\r\n    })\r\n  );\r\n\r\n  return postcss(postCssPlugins);\r\n}\r\n\r\nasync function renderPreProcessor(filePath: string, basePath: string, entryPoint: NgEntryPoint): Promise<string> {\r\n  log.debug(`Render styles for ${filePath}`);\r\n  switch (path.extname(filePath)) {\r\n    case '.scss':\r\n    case '.sass':\r\n      log.debug(`rendering sass from ${filePath}`);\r\n      return renderSass({\r\n        file: filePath,\r\n        importer: nodeSassTildeImporter,\r\n        includePaths: entryPoint.styleIncludePaths\r\n      });\r\n\r\n    case '.less':\r\n      log.debug(`rendering less from ${filePath}`);\r\n      return renderLess({\r\n        filename: filePath,\r\n        paths: entryPoint.styleIncludePaths\r\n      });\r\n\r\n    case '.styl':\r\n    case '.stylus':\r\n      log.debug(`rendering styl from ${filePath}`);\r\n      return renderStylus({\r\n        filename: filePath,\r\n        root: basePath,\r\n        paths: entryPoint.styleIncludePaths\r\n      });\r\n\r\n    case '.css':\r\n    default:\r\n      log.debug(`reading css from ${filePath}`);\r\n      return fs.readFile(filePath).then(buffer => stripBom(buffer.toString()));\r\n  }\r\n}\r\n\r\nconst renderSass = (sassOpts: any): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    sass.render(sassOpts, (err, result) => {\r\n      if (err) {\r\n        reject(err);\r\n      } else {\r\n        resolve(result.css.toString());\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst renderLess = (lessOpts: any): Promise<string> => {\r\n  return fs\r\n    .readFile(lessOpts.filename)\r\n    .then(buffer => stripBom(buffer.toString()))\r\n    .then(\r\n      (lessData: string) =>\r\n        new Promise<string>((resolve, reject) => {\r\n          less.render(lessData || '', lessOpts, (err, result) => {\r\n            if (err) {\r\n              reject(err);\r\n            } else {\r\n              resolve(result.css.toString());\r\n            }\r\n          });\r\n        })\r\n    );\r\n};\r\n\r\n/**\r\n * filename - absolute path to file\r\n * root - root folder of project (where ng-package.json is located)\r\n */\r\nconst renderStylus = ({ filename, root, paths }): Promise<string> => {\r\n  return fs\r\n    .readFile(filename)\r\n    .then(buffer => stripBom(buffer.toString()))\r\n    .then(\r\n      (stylusData: string) =>\r\n        new Promise<string>((resolve, reject) => {\r\n          stylus(stylusData)\r\n            // add paths for resolve\r\n            .set('paths', [root, '.', ...paths, 'node_modules'])\r\n            // add support for resolving plugins from node_modules\r\n            .set('filename', filename)\r\n            // turn on url resolver in stylus, same as flag --resolve-url\r\n            .set('resolve url', true)\r\n            .define('url', stylus.resolver())\r\n            .render((err, css) => {\r\n              if (err) {\r\n                reject(err);\r\n              } else {\r\n                resolve(css);\r\n              }\r\n            });\r\n        })\r\n    );\r\n};\r\n"]}