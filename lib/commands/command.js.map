{"version":3,"file":"command.js","sourceRoot":"","sources":["../../../src/lib/commands/command.ts"],"names":[],"mappings":";;AASA;;;;GAIG;AACH,iBAA8B,OAAsB,EAAE,IAAQ;IAC5D,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IAChD,EAAE,CAAC,CAAC,MAAM,YAAY,OAAO,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;AACH,CAAC;AAPD,0BAOC","sourcesContent":["/**\r\n * Common call signature for a command.\r\n *\r\n * @stable\r\n */\r\nexport interface Command<Arguments, Result> {\r\n  (args?: Arguments): Result | Promise<Result>;\r\n}\r\n\r\n/**\r\n * Executes a Command and returns its promisified result.\r\n *\r\n * @stable\r\n */\r\nexport function execute<A, R>(command: Command<A, R>, args?: A): Promise<R> {\r\n  const result = args ? command(args) : command();\r\n  if (result instanceof Promise) {\r\n    return result;\r\n  } else {\r\n    return Promise.resolve(result);\r\n  }\r\n}\r\n"]}